===== PROJECT TREE =====
.
├── Makefile
├── README.md
├── code.txt
├── doc
│   └── maquette
│       └── wireframes
│           ├── Page d_images.png
│           ├── Page de Recherche.png
│           ├── Page en Grand.png
│           ├── PageConnexionInscription.jpg
│           ├── PageUpload.jpg
│           └── PagesCommentairesContact.jpg
├── explication_durant_implementation.md
├── init.sql
├── install.sh
├── log
│   └── contact.log
├── public
│   ├── about.php
│   ├── assets
│   │   ├── css
│   │   │   ├── base.css
│   │   │   ├── components
│   │   │   │   └── image-card.css
│   │   │   ├── layout.css
│   │   │   ├── main.css
│   │   │   ├── pages
│   │   │   │   ├── about.css
│   │   │   │   ├── auth.css
│   │   │   │   ├── contact.css
│   │   │   │   ├── full-view.css
│   │   │   │   └── search.css
│   │   │   ├── templates
│   │   │   │   ├── footer.css
│   │   │   │   ├── header.css
│   │   │   │   └── sidebar.css
│   │   │   └── theme.css
│   │   ├── img
│   │   │   ├── auth-illustration.svg
│   │   │   ├── logo.png
│   │   │   └── logo.svg
│   │   └── js
│   │       ├── form-handler.js
│   │       ├── sidebar-menu-handler.js
│   │       └── toast-handler.js
│   ├── auth-page.php
│   ├── contact.php
│   ├── gallery.php
│   ├── index.php
│   ├── logout.php
│   ├── search.php
│   ├── templates
│   │   ├── footer.php
│   │   ├── header.php
│   │   └── sidebar.php
│   ├── upload.php
│   ├── uploads
│   │   ├── chat1.jpg
│   │   └── chat2.jpg
│   └── view-larger.php
└── src
    ├── auth.php
    ├── contact.php
    └── database.php

16 directories, 49 files
-e 
===== FILE CONTENTS =====
----- ./explication_durant_implementation.md -----
## logs de 23/05/2025

### Les Session en PHP
utiliser une Session qui represente un petit espace Memoire crée par Php pour chaque Visiteur pour memoriser les connexion

et donc on fait correspondre les données de connexion avec les données stockées dans la session 
exemple : 
```php
$_SESSION['user_id'] = $user['id'];
```
en d'autre terminal "Ce visiteur est maintenant connecté en tant qu'utilisateur avec cet id"

et ca nous facilite beaucoup de traitement par exemple on peut on une seule ligne savoir si un utilisateur est connecté ou pas
```php
function isLoggedIn() {
    return isset($_SESSION['user_id']);
}
```

avec cela on implemente dans auth.php les fonctions de connexion et d'inscriptions 

### fonction registerUser()
avec cette fonction on crée les nouveaux utilisateurs dans la base de données tout en assurant des tests de securité pour garder une base de données cohérente 

on assure ces  choses : 
- un login et un email uniques
- Vérification que tous les champs sont remplis
-Vérification de l’email avec filter_var()
- Longueur minimale pour le login et le mot de passe

avec cela j'ai preferé utilisé des requêtes preparés avec  pdo et des ? et cela pour une raison principale se proteger des injections SQL 
pourquoi ? ca sépare  les données de la requête d'après la doc de php , ce qui évite toute modification malveillante du code SQL et parfois c'est potentielement plus performant 
https://www.php.net/manual/fr/mysqli.quickstart.prepared-statements.php#:~:text=%C3%89chappement%20et%20injection%20SQL

donc apres cela on hash notre mot de passe 

et on insert dans la base de données 

on stocke a la fin dans la session l'id de l'utilisateur 

### fonction LoginUser()
on Vérifie que le login et le mot de passe sont fournis

On récupère l'utilisateur depuis la base en fonction de son login

Ensuite on vérifie que l'utilisateur existe dans la base et que le  mot de passe fourni par l’utilisateur correspond au mot de passe stocké dans la base 

si tout est bon on demarre la session sinon on indique que la connexion n'as pas pu se faire 

## logs de 27/05/2025

### Problème avec apt
Aujourd’hui j’ai rencontré un problème avec apt lors de l’installation du projet à cause de miroirs Ubuntu qui ne fonctionnaient pas correctement donc j'ai decidé de trouver une solution j’ai  modifier le script d’installation pour vérifier si les paquets sont déjà présents sur la machine avant d’essayer de les installer 
Comme ça si l’utilisateur a déjà tous les paquets nécessaires il passe directement à la suite sans refaire l’installation inutilement

Et pour cela on utilise la commande :

```dpkg -l | grep -qw nom_du_paquet```

En gros, dpkg -l affiche la liste de tous les paquets installés sur le système puis on redirige le flux vers grep -qw qui permet de vérifier si le nom du paquet recherché est bien présent dans cette liste Si c’est le cas ça veut dire que le paquet est déjà installé dans la machine 
----- ./log/contact.log -----


=== Nouveau message de contact ===
Date : 2025-05-26 15:58:31
Nom : test
Email : ahmedchoulak80@gmail.com
Message :
qdegfsdg
===============================


----- ./public/view-larger.php -----
<?php
session_start();
require_once __DIR__ . '/../src/database.php';
$pdo = getDatabaseConnection();

$image_id = isset($_GET['image_id']) ? (int)$_GET['image_id'] : 0;
if ($image_id <= 0) {
    die("Image non spécifiée.");
}

$user_id = $_SESSION['user_id'] ?? null;
$commentError = '';

// Commentaire
if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['comment'])) {
    $comment_text = trim($_POST['comment']);
    if (empty($comment_text)) {
        $commentError = "Le commentaire ne peut pas être vide.";
    } else {
        $author = $_SESSION['user_login'] ?? 'Anonyme';
        $stmt = $pdo->prepare("INSERT INTO comments (image_id, author, comment_text, created_at) VALUES (?, ?, ?, NOW())");
        $stmt->execute([$image_id, $author, $comment_text]);
        header("Location: view-larger.php?image_id=" . $image_id);
        exit;
    }
}

// Récupération de l'image
$stmt = $pdo->prepare("SELECT * FROM images WHERE id = ?");
$stmt->execute([$image_id]);
$image = $stmt->fetch(PDO::FETCH_ASSOC);
if (!$image) {
    die("Image introuvable.");
}

// Récupération des commentaires
$stmt = $pdo->prepare("SELECT author AS display_name, comment_text, created_at FROM comments WHERE image_id = ? ORDER BY created_at DESC");
$stmt->execute([$image_id]);
$comments = $stmt->fetchAll(PDO::FETCH_ASSOC);

include "templates/header.php";
?>

<div class="page-wrapper">
    <?php include "templates/sidebar.php"; ?>

    <main class="main-content main-view-larger">
        <div class="larger-image-wrapper">
            <a href="gallery.php" class="gallery-link">
                <i class="fas fa-arrow-left"></i>
                <span>Retour à la galerie</span>
            </a>
            <div class="image-larger">
                <img src="<?= htmlspecialchars($image['path']) ?>"
                     alt="<?= htmlspecialchars($image['caption'] ?? 'Image') ?>">
            </div>
            <p class="image-caption"><?= htmlspecialchars($image['caption']) ?></p>
            <p class="image-date">Posté le <?= date("d/m/Y à H:i", strtotime($image['created_at'])) ?></p>
        </div>

        <div class="comments-section">
            <h3>Commentaires</h3>

            <?php if ($commentError): ?>
                <div class="error-block"><?= htmlspecialchars($commentError) ?></div>
            <?php endif; ?>

            <?php if (empty($comments)): ?>
                <p>Aucun commentaire pour cette image.</p>
            <?php else: ?>
                <?php foreach ($comments as $comment): ?>
                    <div class="comment-item">
                        <div class="avatar"></div>
                        <div class="comment-bubble">
                            <div class="comment-header">
                                <span class="comment-author"><?= htmlspecialchars($comment['display_name']) ?></span>
                                <span class="comment-date"><?= date('d M Y, H\hi', strtotime($comment['created_at'])) ?></span>
                            </div>
                            <div class="comment-text"><?= nl2br(htmlspecialchars($comment['comment_text'])) ?></div>
                        </div>
                    </div>

                <?php endforeach; ?>
            <?php endif; ?>

            <div class="comment-add-section">
                <?php if ($user_id): ?>
                    <form class="comment-form" method="POST" action="view-larger.php?image_id=<?= $image_id ?>">
                        <textarea name="comment" placeholder="Ajouter un commentaire..." required></textarea>
                        <button type="submit" class="btn-primary">Envoyer</button>
                    </form>
                <?php else: ?>
                    <p class="popup-login-message">Vous devez <a href="auth-page.php">vous connecter</a> pour commenter.</p>
                <?php endif; ?>
            </div>
        </div>
    </main>
</div>

<script src="assets/js/sidebar-menu-handler.js"></script>
<?php include "templates/footer.php"; ?>

----- ./public/logout.php -----
<?php
session_start();
session_unset(); 
session_destroy();

// Redirige vers la page de login
header("Location: auth-page.php");
exit;

----- ./public/search.php -----
<?php
session_start();
require_once __DIR__ . '/../src/database.php';
$pdo = getDatabaseConnection();

$searchQuery = isset($_GET['q']) ? trim($_GET['q']) : '';

$images = [];
if ($searchQuery !== '') {
    $stmt = $pdo->prepare("SELECT * FROM images WHERE caption LIKE ? ORDER BY created_at DESC LIMIT 50");
    $stmt->execute(['%' . $searchQuery . '%']);
    $images = $stmt->fetchAll(PDO::FETCH_ASSOC);
}

include 'templates/header.php';
?>

<div class="page-wrapper">
    <?php include 'templates/sidebar.php'; ?>

    <main class="main-content search-page">
        <div class="search-wrapper">
            <form action="search.php" method="get" class="search-bar">
                <input 
                    type="text" 
                    name="q" 
                    value="<?= htmlspecialchars($searchQuery) ?>" 
                    placeholder="Entrez des mots-clés..." 
                    class="search-input" 
                />
                <button type="submit" class="search-btn">Rechercher</button>
            </form>
        </div>

        <div class="image-result">
            <?php if (empty($images)): ?>
                <p>Aucune image trouvée pour : <strong><?= htmlspecialchars($searchQuery) ?></strong></p>
            <?php else: ?>
                <?php foreach ($images as $image): ?>
                    <div class="image-card">
                        <div class="image-preview">
                            <img src="<?= htmlspecialchars($image['path']) ?>" alt="<?= htmlspecialchars($image['caption'] ?? 'Image') ?>">
                        </div>
                        <div class="image-details">
                            <p class="image-caption">“<?= htmlspecialchars($image['caption']) ?>”</p>
                            <a href="view-larger.php?image_id=<?= (int)$image['id'] ?>" class="btn-view">Voir en grand</a>
                            <a href="gallery.php?user_id=<?= (int)$image['user_id'] ?>" class="gallery-link">Galerie du propriétaire</a>
                        </div>
                    </div>
                <?php endforeach; ?>
            <?php endif; ?>
        </div>
    </main>
</div>

<?php include 'templates/footer.php'; ?>

----- ./public/about.php -----
<?php include "templates/header.php"; ?>


<div class="page-wrapper">
    <main class="main-content">
        <div class="about-card about-content">
            <h2>À propos</h2>
            <p>Ce projet est une plateforme simple de partage d’images développée dans le cadre d’un exercice pédagogique.</p>
            <p>Réalisé par :</p>
            <div class="authors-container">
                <p>
                    <strong>CHOULAK Ahmed</strong>
                    <a href="https://github.com/AhmedChlk" target="_blank" class="github-link" title="Voir le GitHub d'Ahmed">
                        <i class="fab fa-github"></i>
                    </a>
                </p>
                <p><strong>MOULAI Amine</strong>
                    <a href="https://github.com/AhmedChlk" target="_blank" class="github-link" title="Voir le GitHub d'Ahmed">
                        <i class="fab fa-github"></i>
                    </a>
                </p>
            </div>
        </div>
    </main>
</div>

<?php include "templates/footer.php"; ?>

----- ./public/assets/css/theme.css -----
/* ====================
   BOUTONS
   ==================== */
.btn-primary {
  background: #4A90E2;
  color: #fff;
  border: none;
  padding: 0 20px;
  height: 48px;
  border-radius: 8px;
  font-size: 16px;
  cursor: pointer;
  transition: background 0.3s ease;
}
.btn-primary:hover {
  background: #357ABD;
}

.logout-btn {
  width: 100%;
  margin: 16px 0;
}

.toolbar-btn {
  min-width: 90px;
  font-size: 14px;
  padding: 8px;
  border: 1px solid #CCC;
  border-radius: 6px;
  background: #fff;
  cursor: pointer;
  text-align: center;
}
.toolbar-btn:hover {
  background: #eee;
}

/* ====================
   CLASSES UTILITAIRES
   ==================== */
.full {
  width: 100%;
}
.hidden {
  display: none !important;
}

/* ====================
   FORMULAIRES
   ==================== */
.auth-zone {
  width: 100%;
  max-width: 350px;
  padding: 24px;
  border-radius: 8px;
  background: #fff;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
}
.auth-zone.full textarea,
.textarea-message {
  padding: 12px;
  font-family: 'Poppins', sans-serif;
  border-radius: 8px;
  border: 1px solid #CCC;
  font-size: 16px;
  resize: none;
}

.form {
  display: flex;
  flex-direction: column;
  gap: 16px;
}
.form input {
  height: 48px;
  padding: 0 12px;
  border: 1px solid #CCC;
  border-radius: 8px;
  font-size: 16px;
  font-family: 'Poppins', sans-serif;
}

/* ====================
   TABS
   ==================== */
.tabs {
  display: flex;
  margin-bottom: 16px;
}
.tab {
  flex: 1;
  text-align: center;
  padding: 8px 0;
  font-size: 16px;
  cursor: pointer;
}
.tab.active {
  border-bottom: 3px solid #4A90E2;
  font-weight: 600;
}

/* ====================
   MESSAGES
   ==================== */
.error-block {
  background-color: #fff3cd;
  color: #856404;
  border: 1px solid #ffeeba;
  padding: 10px;
  margin-bottom: 10px;
  border-radius: 6px;
  font-size: 14px;
}

.toast {
  position: fixed;
  top: 20px;
  right: 20px;
  z-index: 9999;
  padding: 14px 24px;
  border-radius: 8px;
  box-shadow: 0 4px 16px rgba(0,0,0,0.1);
  font-size: 15px;
  opacity: 1;
  transform: translateY(0);
  transition: all 0.6s ease;
}

.success-toast {
  background-color: #d4edda;
  color: #155724;
  border: 1px solid #c3e6cb;
}
    
----- ./public/assets/css/pages/auth.css -----
/* === AUTH PAGE FIXED ALIGNMENT === */
/* ================ AUTH PAGE MAIN =================== */
.auth-container {
  display: flex;
  justify-content: space-between;
  align-items: stretch;
  gap: 40px;
  max-width: 1200px;
  width: 100%;
  padding: 0 20px;
  flex-wrap: wrap;
}

/* Bloc illustration + texte slogan */
.slogan-zone {
  display: flex;
  flex-direction: row;
  align-items: center;
  flex: 1.3;
  gap: 20px;
  min-width: 450px;
}

.slogan-illustration-wrapper {
  flex-shrink: 0;
}
.auth-illustration {
  width: 220px;
  height: auto;
  border-radius: 12px;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.05);
}

/* Texte slogan agrandi */
.slogan-text {
  display: flex;
  flex-direction: column;
  justify-content: center;
}
.slogan-text h1 {
  font-size: 30px;
  margin-bottom: 10px;
}
.slogan-text p {
  font-size: 17px;
  margin-bottom: 18px;
  color: #444;
}

.auth-stats {
  display: flex;
  gap: 12px;
  flex-wrap: wrap;
}
.auth-stats div {
  background: #F9F9F9;
  padding: 10px 14px;
  border-radius: 8px;
  font-size: 13px;
  box-shadow: 0 2px 6px rgba(0,0,0,0.03);
  text-align: center;
  min-width: 100px;
}

/* Agrandissement du formulaire */
.auth-zone {
  flex: 1;
  max-width: 420px;
  padding: 28px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
  border-radius: 8px;
  background: #fff;
}

.form input {
  height: 50px;
  font-size: 17px;
}

.btn-primary {
  height: 50px;
  font-size: 17px;
}
----- ./public/assets/css/pages/full-view.css -----
.main-view-larger{
  flex-direction: column ;
}
.larger-image-wrapper {
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.image-larger {
  width: 100%;
  background: #222;
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: 22px;
  box-shadow: 0 8px 32px rgba(0,0,0,0.13);
  margin-bottom: 18px;
  overflow: hidden;
  padding: 0; 
}

.image-larger img {
  max-width: 100%;
  max-height: 80vh;
  width: auto;
  height: auto;
  object-fit: contain;
  object-position: center center;
  display: block;
  border-radius: 20px;
  background: #222;
}


.comments-section {
    border-radius: 8px;
    padding: 18px 22px;
    width: 100%;
    background: #fff;
    box-shadow: 0 2px 10px rgba(0,0,0,0.04);
    margin-top: 32px;
    margin-bottom: 20px;
}

.comments-section h3 {
    margin-bottom: 14px;
    font-size: 1.3rem;
    font-weight: 600;
    letter-spacing: 0.2px;
}

.comment-item {
    display: flex;
    gap: 10px;
    margin-bottom: 16px;
    align-items: flex-start;
}

.avatar {
    width: 40px;
    height: 40px;
    background-position: center;
    background-size: cover;
    background-repeat: no-repeat;
    border-radius: 50%;
    border: 1px solid #ccc;
    flex-shrink: 0;
    background-color: #ddd;
}

.comment-content {
    flex: 1;
}

.comment-header {
    display: flex;
    align-items: baseline;
    gap: 10px;
    font-size: 0.98rem;
    font-weight: 600;
    color: #555;
    margin-bottom: 4px;
}

.comment-author {
    font-weight: 700;
    color: #222;
}

.comment-date {
    font-size: 0.9em;
    font-weight: 400;
    color: #888;
}

.comment-text {
    font-size: 1.02rem;
    line-height: 1.4;
    
}

/* Section formulaire */
.comment-add-section {
    padding: 16px 0 0 0;
    box-sizing: border-box;
    border-radius: 12px;
    margin-top: 8px;
    background: none;
}

.comment-form {
    display: flex;
    justify-content: flex-end;
    gap: 12px;
    width: 100%;
    margin-top: 8px;
    box-sizing: border-box;
}

.comment-form textarea {
    flex: 1;
    height: 80px;
    resize: vertical;
    padding: 8px 12px;
    font-size: 1rem;
    border: 1px solid #ccc;
    border-radius: 8px;
    box-sizing: border-box;
    font-family: inherit;
    background: #fafbfc;
}

.comment-form button {
    padding: 0 24px;
    height: 60px;
    font-size: 1rem;
    border: none;
    background-color: #4A90E2;
    color: white;
    border-radius: 8px;
    cursor: pointer;
    transition: background 0.3s;
    font-weight: 600;
    box-shadow: 0 2px 8px rgba(74,144,226,0.04);
}

.comment-form button:hover {
    background-color: #357ABD;
}

.gallery-link {
  align-self: flex-start;
  display: inline-flex;
  align-items: center;
  gap: 8px;
  font-size: 1.08rem;
  font-weight: 500;
  color: #357ABD;
  background: #f5f8ff;
  border-radius: 24px;
  padding: 7px 20px 7px 16px;
  box-shadow: 0 2px 8px rgba(74,144,226,0.07);
  text-decoration: none;
  transition: background 0.18s, color 0.18s, box-shadow 0.18s;
  margin-bottom: 18px;
  margin-top: 8px;
  border: 1px solid #e1e8f0;
}

.gallery-link i {
  
  font-size: 1.12em;
  color: #357ABD;
  margin-right: 2px;
  transition: color 0.18s;
}

.gallery-link:hover, .gallery-link:focus {
  background: #e7f1ff;
  color: #205da5;
  box-shadow: 0 4px 16px rgba(74,144,226,0.13);
  border-color: #bcd6f5;
  text-decoration: none;
}

.gallery-link:hover i,
.gallery-link:focus i {
  color: #205da5;
}



.comment-item {
    display: flex;
    gap: 16px;
    margin-bottom: 18px;
    align-items: flex-start;
}

/* Avatar */
.avatar {
    width: 40px;
    height: 40px;
    background-position: center;
    background-size: cover;
    background-repeat: no-repeat;
    border-radius: 50%;
    border: 1px solid #ccc;
    flex-shrink: 0;
    background-color: #ddd;
}

/* La bulle autour du commentaire */
.comment-bubble {
    background: #f4f4f4;
    border-radius: 14px;
    padding: 12px 18px 10px 18px;
    display: flex;
    flex-direction: column;
    min-width: 0;
    flex: 1;
}

/* Auteur + date sur une ligne */
.comment-header {
    display: flex;
    align-items: center;
    gap: 12px;
    font-size: 1.04rem;
    font-weight: 600;
    color: #555;
    margin-bottom: 3px;
}

/* Nom auteur + date */
.comment-author {
    font-weight: 700;
    color: #222;
}
.comment-date {
    font-size: 0.93em;
    font-weight: 400;
    color: #888;
}

/* Texte du commentaire */
.comment-text {
    font-size: 1.06rem;
    line-height: 1.4;
    color: #222;
    margin-top: 2px;
    word-break: break-word;
}


.popup-login-message {
    margin: 32px auto 0 auto;
    max-width: 480px;
    background: #f7faff;
    color: #185b9a;
    border: 1px solid #e3eaf3;
    border-radius: 10px;
    padding: 18px 22px 18px 20px;
    display: flex;
    align-items: center;
    gap: 14px;
    font-size: 1.10rem;
    font-weight: 500;
    box-shadow: 0 2px 8px rgba(50,80,150,0.06);
}

.popup-login-message i {
    color: #357ABD;
    font-size: 1.38em;
    margin-right: 4px;
    flex-shrink: 0;
}

.popup-login-message a {
    color: #205da5;
    font-weight: 700;
    text-decoration: underline;
    margin-left: 4px;
    transition: color 0.18s;
}

.popup-login-message a:hover,
.popup-login-message a:focus {
    color: #4A90E2;
    text-decoration: underline;
}


----- ./public/assets/css/pages/contact.css -----
/* ======= CONTACTS ======= */
.contacts-list {
  
  display: flex;
  flex-direction: column;
  gap: 16px;
  margin-top: 20px;
  padding-left: 4px;
}

.contact-item {
  display: flex;
  align-items: center;
  gap: 10px;
  font-size: 14px;
}

.contact-icon {
  font-size: 22px;
  color: #444;
}

.contact-info {
  flex: 1;
  display: flex;
  justify-content: space-between;
  gap: 4px;
  line-height: 1.2;
}

.contact-info .name {
  font-weight: 600;
  color: #333;
  font-size: 14px;
}

.contact-info .icons {
  display: flex;
  gap: 8px;
  color: #777;
  font-size: 13px;
  padding: 0 15px;
}




----- ./public/assets/css/pages/about.css -----

/* === PAGE À PROPOS === */
.about-card {
  max-width: 600px;
  margin: 0 auto;
  padding: 24px;
  display: flex;
  flex-direction: column;
  gap: 16px;
  background: #fff;
  border: 1px solid #e0e0e0;
  border-radius: 16px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
  font-size: 16px;
}

.about-content h2 {
  margin-bottom: 12px;
}

.about-content p {
  margin-bottom: 8px;
}


.github-link {
  color: #4A90E2;
  margin-left: 6px;
  font-size: 18px;
}

.github-link:hover {
  color: #357ABD;
}
----- ./public/assets/css/pages/search.css -----
/* === BARRE DE RECHERCHE === */
.main-content.search-page{
    display: block;
    padding: 20px;
}

.search-bar {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 8px;
    margin: 20px auto;
    padding: 0 24px;
    width: 100%;
    max-width: 100%;
  }
  
  .search-input {
    flex: 1;
    padding: 12px 16px;
    border-radius: 8px;
    border: 1px solid #ccc;
    font-size: 16px;
  }
  
  .search-btn {
    padding: 12px 20px;
    background-color: #4A90E2;
    color: white;
    border: none;
    border-radius: 8px;
    cursor: pointer;
    font-weight: bold;
    font-size: 16px;
  }
  
  .search-btn:hover {
    background-color: #357ABD;
  }
  
  /* === RÉSULTATS D'IMAGES === */
  .image-result {
    display: grid;
    grid-template-columns: repeat(4, 1fr); /* 4 colonnes de largeur égale */
    gap: 24px;
    padding: 24px;
}
  
  
  
  
----- ./public/assets/css/layout.css -----
/* ====================
   LAYOUT GÉNÉRAL
   ==================== */
.page-wrapper {
  flex: 1;
  display: flex;
}
.main-content {
  flex: 1;
  padding: 0 20px;
  display: flex;
  align-items: center;
  justify-content: center;
}
.content {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 80px;
  width: 100%;
  max-width: 1200px;
}
----- ./public/assets/css/components/image-card.css -----

/* ====================
   IMAGE CARD
   ==================== */
.gallery-content {
  display: flex;
  gap: 20px 25px;
  padding: 20px;
  width: 100%;
  max-width: 1200px;
  justify-content: center;
  flex-wrap: wrap;
}
  .image-card {
    width: 300px;
    height: 360px;
    background-color: #fff;
    border: 1px solid #e0e0e0;
    border-radius: 16px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
    padding: 10px;
    max-width: 280px;
    text-align: center;
    display: flex;
    flex-direction: column;
    align-items: center;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
  }
.image-card:hover {
  transform: translateY(-6px);
  box-shadow: 0 6px 16px rgba(0,0,0,0.08);
}
.image-preview {
  width: 100%;
  height: 160px;
  background-color: #f5f5f5;
  border-radius: 12px;
  margin-bottom: 12px;
  display: flex;
  justify-content: center;
  align-items: center;
  overflow: hidden;
}
.image-preview img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}
.image-caption {
  font-style: italic;
  font-size: 15px;
  margin: 8px 0;
  color: #333;
  text-align: center;
  padding: 10px 16px 4px;
}
.image-date {
  font-size: 13px;
  color: #666;
  text-align: center;
  padding: 0 12px 12px;
}
.image-card .btn-view {
  background: #4A90E2;
  color: white;
  font-size: 14px;
  padding: 10px 0;
  width: 80%;
  border-radius: 8px;
  text-decoration: none;
  transition: background 0.3s;
  display: block;
  margin: 10px auto;
  text-align: center;
}
.image-card .btn-view:hover {
  background: #357ABD;
}

.gallery-link {
    font-size: 14px;
    color: #4A90E2;
    text-decoration: underline;
  }
  
  .gallery-link:hover {
    color: #357ABD;
  }

----- ./public/assets/css/base.css -----
/* ====================
   GLOBAL RESET + BASE
   ==================== */
* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html, body {
  min-height: 100vh;
}

body {
  display: flex;
  flex-direction: column;
  font-family: 'Poppins', sans-serif;
  color: #333;
  background: #fff;
}

----- ./public/assets/css/templates/footer.css -----
/* ====================
   FOOTER
   ==================== */
.footer {
  background: #F5F5F5;
  padding: 20px 0;
  text-align: center;
  height: 60px;
}

.footer .container {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100%;
}

.footer a {
  margin: 0 8px;
  color: #4A90E2;
  text-decoration: none;
}

.footer a:hover {
  text-decoration: underline;
}

----- ./public/assets/css/templates/sidebar.css -----

/* ====================
   SIDEBAR
   ==================== */
.sidebar {
  width: 260px;

  background: #F9F9F9;
  box-shadow: 2px 0 8px rgba(0,0,0,0.05);
  padding: 20px;
}

.toolbar-row {
  display: flex;
  gap: 8px;
  flex-direction: column;
  margin-bottom: 16px;
}

.toolbar-btn {
  min-width: 90px;
  font-size: 14px;
  padding: 8px;
  border: 1px solid #CCC;
  border-radius: 6px;
  background: #fff;
  cursor: pointer;
  text-align: center;
}
.toolbar-btn:hover {
  background: #eee;
}
.logout-btn {
  width: 100%;
  margin: 16px 0;
}

/* ======= SIDEBAR MENU ======= */
.menu-options {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 6px;
  margin-top: 10px;
}

.menu-options.hidden {
  display: none;
}

.menu-link {
  text-decoration: none;
  color: #333;
  font-size: 14px;
  padding: 6px 12px;
  border-radius: 4px;
  text-align: center;
  width: 100%;
  transition: background-color 0.2s, color 0.2s;
}
.menu-link:hover {
  background-color: #e0e0e0;
  color: #4A90E2;
}
.menu-link.logout:hover {
  color: #D32F2F;
}


----- ./public/assets/css/templates/header.css -----
/* ====================
   HEADER
   ==================== */
.header {
  background: #F5F5F5;
  height: 80px;
  display: flex;
  align-items: center;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.03);
  z-index: 1000;
  position: relative;
}

.header .container {
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 24px;
}

/* ======= HEADER LOGO ===== */
.logo {
  display: flex;
  align-items: center;
  gap: 12px;
  text-decoration: none;
}

.logo-icon {
  width: 48px;
  height: 48px;
  background-color: #fff;
  border-radius: 12px;
  padding: 6px;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
  display: flex;
  align-items: center;
  justify-content: center;
  transition: transform 0.3s ease;
}
.logo-icon:hover {
  transform: scale(1.05);
}
.logo-icon img {
  width: 100%;
  height: auto;
  object-fit: contain;
}

.logo-text {
  font-size: 24px;
  font-weight: 600;
  font-family: 'Poppins', sans-serif;
  display: flex;
  align-items: baseline;
  gap: 2px;
}
.logo-text span {
  color: #4A90E2;
  font-weight: 700;
}
.logo-text .dark {
  color: #333;
  font-weight: 600;
}

/* ======= HEADER MENU ======= */
.menu {
  display: flex;
  gap: 32px;
  padding: 0 15px;
}
.menu a {
  font-size: 16px;
  text-decoration: none;
  color: #333;
  transition: color 0.2s ease;
  white-space: nowrap;
}
.menu a:hover {
  color: #4A90E2;
  text-decoration: underline;
}

----- ./public/assets/css/main.css -----
/* ========== MAIN CSS ========== */
/* 1. Base reset et fondations */
@import url("base.css");
@import url("theme.css");

/* 2. Layout général */
@import url("layout.css");

/* 3. Composants UI Et Templates */
@import url("components/image-card.css");
@import url("templates/header.css");
@import url("templates/sidebar.css");
@import url("templates/footer.css");


/* 4. Pages spécifiques */
@import url("pages/auth.css");
@import url("pages/contact.css");
@import url("pages/about.css");
@import url("pages/search.css");
@import url("pages/full-view.css");


----- ./public/assets/js/sidebar-menu-handler.js -----
document.addEventListener("DOMContentLoaded", () => {
  const menuToggle = document.getElementById("menu-toggle");
  const menuOptions = document.getElementById("menu-options");

  if (menuToggle && menuOptions) {
    menuToggle.addEventListener("click", () => {
      menuOptions.classList.toggle("hidden");
    });
  }
});

----- ./public/assets/js/toast-handler.js -----
document.addEventListener("DOMContentLoaded", () => {
  const toast = document.getElementById("success-toast");
  if (toast) {
    setTimeout(() => {
      toast.style.opacity = "0";
      toast.style.transform = "translateY(-20px)";
      setTimeout(() => toast.remove(), 500);
    }, 3000); // 3 secondes avant disparition
  }
});

----- ./public/assets/js/form-handler.js -----
document.addEventListener("DOMContentLoaded", () => {
  const tabs = document.querySelectorAll(".tab");
  const loginForm = document.getElementById("form-login");
  const registerForm = document.getElementById("form-register");

  function activateTab(tabName) {
    tabs.forEach(t => t.classList.remove("active"));
    if (tabName === "login") {
      tabs[0].classList.add("active");
      loginForm.classList.remove("hidden");
      registerForm.classList.add("hidden");
    } else {
      tabs[1].classList.add("active");
      loginForm.classList.add("hidden");
      registerForm.classList.remove("hidden");
    }
  }

  tabs.forEach(tab => {
    tab.addEventListener("click", () => {
      activateTab(tab.dataset.tab);
    });
  });

  if (typeof initialTab !== "undefined") {
    activateTab(initialTab);
  }
});

----- ./public/contact.php -----
<?php
require_once __DIR__ . '/../src/contact.php';
include "templates/header.php";



if (session_status() === PHP_SESSION_NONE) {
    session_start();
}
$success = $_SESSION['contact_success'] ?? null;
$error = $_SESSION['contact_error'] ?? null;
unset($_SESSION['contact_success'], $_SESSION['contact_error']);
?>
<link rel="stylesheet" href="assets/css/contact.css">

<div class="page-wrapper">
  <main class="main-content">
    <div class="auth-zone full">
      <h2>Contact</h2>
      <p class="contact-p">Une question, un retour ou un problème ? Remplissez le formulaire ci-dessous :</p>

      <?php if ($success): ?>
        <div style="background: #d4edda; color: #155724; padding: 10px; border-radius: 6px; margin-bottom: 10px;">
          <?= htmlspecialchars($success) ?>
        </div>
      <?php endif; ?>

      <?php if ($error): ?>
        <div style="background: #f8d7da; color: #721c24; padding: 10px; border-radius: 6px; margin-bottom: 10px;">
          <?= htmlspecialchars($error) ?>
        </div>
      <?php endif; ?>

      <form method="post" action="../src/contact.php" class="form">
        <input type="text" name="nom" placeholder="Votre nom" required>
        <input type="email" name="email" placeholder="Votre email" required>
        <textarea name="message" placeholder="Votre message" required rows="5" class="textarea-message"></textarea>
        <button type="submit" class="btn-primary full">Envoyer</button>
      </form>
    </div>
  </main>
</div>

<?php include "templates/footer.php"; ?>

----- ./public/index.php -----
<?php
if (session_status() === PHP_SESSION_NONE) {
    session_start();
}

if (isset($_SESSION['user_id'])) {
    header('Location: gallery.php');
    exit;
}

header("Location: auth-page.php");
exit;

----- ./public/auth-page.php -----
<?php
if (session_status() === PHP_SESSION_NONE) {
    session_start();
}

ini_set('display_errors', 1);
ini_set('display_startup_errors', 1);
error_reporting(E_ALL);

require_once __DIR__ . '/../src/database.php';
require_once __DIR__ . '/../src/auth.php';

$pdo = getDatabaseConnection();

if (isset($_SESSION['user_id'])) {
    header("Location: gallery.php");
    exit;
}

$loginErrors = [];
$registerErrors = [];
$formType = 'login'; // par défaut

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $action = $_POST['action'] ?? '';

    if ($action === 'login') {
        $login = $_POST['login'] ?? '';
        $password = $_POST['password'] ?? '';
        $result = loginUser($pdo, $login, $password);
        if ($result === true) {
            $_SESSION['success_message'] = "Connexion réussie ! Bienvenue 👋";
            header("Location: gallery.php");
            exit;
        }
       else {
            $loginErrors[] = $result;
            $formType = 'login';
        }
    }

    if ($action === 'register') {
        $nom = $_POST['nom'] ?? '';
        $prenom = $_POST['prenom'] ?? '';
        $email = $_POST['email'] ?? '';
        $login = $_POST['login'] ?? '';
        $password = $_POST['password'] ?? '';
        $confirm = $_POST['confirm_password'] ?? '';

        $result = registerUser($pdo, $login, $password, $nom, $prenom, $email, $confirm);
        if ($result === true) {
            $_SESSION['success_message'] = "Inscription réussie ! Vous êtes maintenant connecté.";
            header("Location: gallery.php");
            exit;
        } else {
            $registerErrors[] = $result;
            $formType = 'register';
        }
    }
}
?>

<?php include 'templates/header.php'; ?>
<div class="page-wrapper">
  <main class="main-content">
    <div class="auth-container">

      <!-- Bloc illustration + slogan -->
      <div class="slogan-zone">
        <div class="slogan-illustration-wrapper">
          <img src="assets/img/auth-illustration.svg" alt="Illustration banque d'images" class="auth-illustration">
        </div>
        <div class="slogan-text">
          <h1>Partagez vos plus belles images</h1>
          <p>Stockez, organisez et partagez vos créations en quelques clics.</p>
          <div class="auth-stats">
            <div><strong>12 000+</strong><br>images partagées</div>
            <div><strong>850+</strong><br>utilisateurs actifs</div>
            <div><strong>100%</strong><br>gratuit & sécurisé</div>
          </div>
        </div>
      </div>

      <!-- Zone de connexion/inscription -->
      <div class="auth-zone">
        <div class="tabs">
          <div class="tab <?= $formType === 'login' ? 'active' : '' ?>" data-tab="login">Connexion</div>
          <div class="tab <?= $formType === 'register' ? 'active' : '' ?>" data-tab="register">Inscription</div>
        </div>

        <!-- Form Connexion -->
        <form class="form <?= $formType === 'login' ? '' : 'hidden' ?>" id="form-login" method="POST">
          <input type="hidden" name="action" value="login">
          <input type="text" placeholder="Login" name="login" required>
          <input type="password" placeholder="Mot de passe" name="password" required>

          <?php if (!empty($loginErrors)): ?>
            <div class="error-block">
              <?php foreach ($loginErrors as $e): ?>
                <div>⚠️ <?= htmlspecialchars($e) ?></div>
              <?php endforeach; ?>
            </div>
          <?php endif; ?>

          <button class="btn-primary full" type="submit">Se connecter</button>
        </form>

        <!-- Form Inscription -->
        <form class="form <?= $formType === 'register' ? '' : 'hidden' ?>" id="form-register" method="POST">
          <input type="hidden" name="action" value="register">
          <input type="text" placeholder="Nom" name="nom" required>
          <input type="text" placeholder="Prénom" name="prenom" required>
          <input type="email" placeholder="Adresse email" name="email" required>
          <input type="text" placeholder="Login" name="login" required>
          <input type="password" placeholder="Mot de passe" name="password" required>
          <input type="password" placeholder="Confirmer le mot de passe" name="confirm_password" required>

          <?php if (!empty($registerErrors)): ?>
            <div class="error-block">
              <?php foreach ($registerErrors as $e): ?>
                <div>⚠️ <?= htmlspecialchars($e) ?></div>
              <?php endforeach; ?>
            </div>
          <?php endif; ?>

          <button class="btn-primary full" type="submit">S'inscrire</button>
        </form>
      </div>
    </div>
  </main>
</div>
<?php include 'templates/footer.php'; ?>

<script>
  const initialTab = '<?= $formType ?>';
</script>
<script src="assets/js/form-handler.js"></script>

----- ./public/templates/header.php -----
<!DOCTYPE html>
<html lang="fr">

<head>
    <meta charset="UTF-8">
    <title>MyImageBank</title>
    <link rel="icon" href="assets/img/logo.svg" type="image/svg+xml">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link rel="stylesheet" href="assets/css/main.css">

    

    
</head>

<body>
    <header class="header">
        <div class="container">
            <a href="index.php" class="logo">
                <div class="logo-icon">
                    <img src="assets/img/logo.svg" alt="Logo MyImageBank">
                </div>
                <p class="logo-text">
                    <span class="dark">My</span><span class="blue">Image</span><span class="dark">Bank</span>
                </p>

            </a>

            </div>
            <nav class="menu">
                <a href="index.php">Accueil</a>
                <a href="contact.php">Contact</a>
                <a href="about.php">À propos</a>
            </nav>
        </div>
    </header>
----- ./public/templates/footer.php -----
  <footer class="footer">
      <div class="container">
          © 2025 MyImageBank – <a href="#">CGU</a> | <a href="#">Politique de confidentialité</a>
      </div>
  </footer>
  </body>

  </html>
----- ./public/templates/sidebar.php -----
<aside class="sidebar">
  <div class="toolbar-row">
    <button class="toolbar-btn" id="menu-toggle">
      <i class="fa-solid fa-folder"></i> Menu ▼
    </button>
    <div id="menu-options" class="menu-options hidden">
      <a href="search.php" class="menu-link">
        <i class="fa-solid fa-magnifying-glass"></i> Rechercher
      </a>
      <a href="upload.php" class="menu-link">
        <i class="fa-solid fa-upload"></i> Upload
      </a>
      <a href="logout.php" class="menu-link logout">
        <i class="fa-solid fa-right-from-bracket"></i> Déconnexion
      </a>
    </div>
  </div>

  <div class="contacts-list">
    <div class="contact-item">
      <i class="fa-solid fa-user-circle contact-icon"></i>
      <div class="contact-info">
        <span class="name">Ahmed</span>
        <span class="icons">
          <i class="fa-solid fa-image"></i>
          <i class="fa-solid fa-comment-dots"></i>
        </span>
      </div>
    </div>
    <div class="contact-item">
      <i class="fa-solid fa-user-circle contact-icon"></i>
      <div class="contact-info">
        <span class="name">Leghlough</span>
        <span class="icons">
          <i class="fa-solid fa-image"></i>
          <i class="fa-solid fa-comment-dots"></i>
        </span>
      </div>
    </div>
    <div class="contact-item">
      <i class="fa-solid fa-user-circle contact-icon"></i>
      <div class="contact-info">
        <span class="name">Ahmed</span>
        <span class="icons">
          <i class="fa-solid fa-image"></i>
          <i class="fa-solid fa-comment-dots"></i>
        </span>
      </div>
    </div>
    <div class="contact-item">
      <i class="fa-solid fa-user-circle contact-icon"></i>
      <div class="contact-info">
        <span class="name">Leghlough</span>
        <span class="icons">
          <i class="fa-solid fa-image"></i>
          <i class="fa-solid fa-comment-dots"></i>
        </span>
      </div>
    </div><div class="contact-item">
      <i class="fa-solid fa-user-circle contact-icon"></i>
      <div class="contact-info">
        <span class="name">Ahmed</span>
        <span class="icons">
          <i class="fa-solid fa-image"></i>
          <i class="fa-solid fa-comment-dots"></i>
        </span>
      </div>
    </div>
    <div class="contact-item">
      <i class="fa-solid fa-user-circle contact-icon"></i>
      <div class="contact-info">
        <span class="name">Leghlough</span>
        <span class="icons">
          <i class="fa-solid fa-image"></i>
          <i class="fa-solid fa-comment-dots"></i>
        </span>
      </div>
    </div><div class="contact-item">
      <i class="fa-solid fa-user-circle contact-icon"></i>
      <div class="contact-info">
        <span class="name">Ahmed</span>
        <span class="icons">
          <i class="fa-solid fa-image"></i>
          <i class="fa-solid fa-comment-dots"></i>
        </span>
      </div>
    </div>
    <div class="contact-item">
      <i class="fa-solid fa-user-circle contact-icon"></i>
      <div class="contact-info">
        <span class="name">Leghlough</span>
        <span class="icons">
          <i class="fa-solid fa-image"></i>
          <i class="fa-solid fa-comment-dots"></i>
        </span>
      </div>
    </div><div class="contact-item">
      <i class="fa-solid fa-user-circle contact-icon"></i>
      <div class="contact-info">
        <span class="name">Ahmed</span>
        <span class="icons">
          <i class="fa-solid fa-image"></i>
          <i class="fa-solid fa-comment-dots"></i>
        </span>
      </div>
    </div>
    <div class="contact-item">
      <i class="fa-solid fa-user-circle contact-icon"></i>
      <div class="contact-info">
        <span class="name">Leghlough</span>
        <span class="icons">
          <i class="fa-solid fa-image"></i>
          <i class="fa-solid fa-comment-dots"></i>
        </span>
      </div>
    </div><div class="contact-item">
      <i class="fa-solid fa-user-circle contact-icon"></i>
      <div class="contact-info">
        <span class="name">Ahmed</span>
        <span class="icons">
          <i class="fa-solid fa-image"></i>
          <i class="fa-solid fa-comment-dots"></i>
        </span>
      </div>
    </div>
    <div class="contact-item">
      <i class="fa-solid fa-user-circle contact-icon"></i>
      <div class="contact-info">
        <span class="name">Leghlough</span>
        <span class="icons">
          <i class="fa-solid fa-image"></i>
          <i class="fa-solid fa-comment-dots"></i>
        </span>
      </div>
    </div><div class="contact-item">
      <i class="fa-solid fa-user-circle contact-icon"></i>
      <div class="contact-info">
        <span class="name">Ahmed</span>
        <span class="icons">
          <i class="fa-solid fa-image"></i>
          <i class="fa-solid fa-comment-dots"></i>
        </span>
      </div>
    </div>
    <div class="contact-item">
      <i class="fa-solid fa-user-circle contact-icon"></i>
      <div class="contact-info">
        <span class="name">Leghlough</span>
        <span class="icons">
          <i class="fa-solid fa-image"></i>
          <i class="fa-solid fa-comment-dots"></i>
        </span>
      </div>
    </div><div class="contact-item">
      <i class="fa-solid fa-user-circle contact-icon"></i>
      <div class="contact-info">
        <span class="name">Ahmed</span>
        <span class="icons">
          <i class="fa-solid fa-image"></i>
          <i class="fa-solid fa-comment-dots"></i>
        </span>
      </div>
    </div>
    <div class="contact-item">
      <i class="fa-solid fa-user-circle contact-icon"></i>
      <div class="contact-info">
        <span class="name">Leghlough</span>
        <span class="icons">
          <i class="fa-solid fa-image"></i>
          <i class="fa-solid fa-comment-dots"></i>
        </span>
      </div>
    </div><div class="contact-item">
      <i class="fa-solid fa-user-circle contact-icon"></i>
      <div class="contact-info">
        <span class="name">Ahmed</span>
        <span class="icons">
          <i class="fa-solid fa-image"></i>
          <i class="fa-solid fa-comment-dots"></i>
        </span>
      </div>
    </div>
    <div class="contact-item">
      <i class="fa-solid fa-user-circle contact-icon"></i>
      <div class="contact-info">
        <span class="name">Leghlough</span>
        <span class="icons">
          <i class="fa-solid fa-image"></i>
          <i class="fa-solid fa-comment-dots"></i>
        </span>
      </div>
    </div><div class="contact-item">
      <i class="fa-solid fa-user-circle contact-icon"></i>
      <div class="contact-info">
        <span class="name">Ahmed</span>
        <span class="icons">
          <i class="fa-solid fa-image"></i>
          <i class="fa-solid fa-comment-dots"></i>
        </span>
      </div>
    </div>
    <div class="contact-item">
      <i class="fa-solid fa-user-circle contact-icon"></i>
      <div class="contact-info">
        <span class="name">Leghlough</span>
        <span class="icons">
          <i class="fa-solid fa-image"></i>
          <i class="fa-solid fa-comment-dots"></i>
        </span>
      </div>
    </div><div class="contact-item">
      <i class="fa-solid fa-user-circle contact-icon"></i>
      <div class="contact-info">
        <span class="name">Ahmed</span>
        <span class="icons">
          <i class="fa-solid fa-image"></i>
          <i class="fa-solid fa-comment-dots"></i>
        </span>
      </div>
    </div>
    <div class="contact-item">
      <i class="fa-solid fa-user-circle contact-icon"></i>
      <div class="contact-info">
        <span class="name">Leghlough</span>
        <span class="icons">
          <i class="fa-solid fa-image"></i>
          <i class="fa-solid fa-comment-dots"></i>
        </span>
      </div>
    </div>  <div class="contact-item">
      <i class="fa-solid fa-user-circle contact-icon"></i>
      <div class="contact-info">
        <span class="name">Ahmed</span>
        <span class="icons">
          <i class="fa-solid fa-image"></i>
          <i class="fa-solid fa-comment-dots"></i>
        </span>
      </div>
    </div>
    <div class="contact-item">
      <i class="fa-solid fa-user-circle contact-icon"></i>
      <div class="contact-info">
        <span class="name">Leghlough</span>
        <span class="icons">
          <i class="fa-solid fa-image"></i>
          <i class="fa-solid fa-comment-dots"></i>
        </span>
      </div>
    </div>
  </div>

</aside>

----- ./public/upload.php -----

----- ./public/gallery.php -----
<?php
if (session_status() === PHP_SESSION_NONE) {
    session_start();
}

if (!isset($_SESSION['user_id'])) {
    header("Location: auth-page.php");
    exit;
}

require_once '../src/database.php';
$pdo = getDatabaseConnection();

// Récupération des images de l'utilisateur connecté
$stmt = $pdo->prepare("
    SELECT images.*, users.login 
    FROM images 
    JOIN users ON images.user_id = users.id 
    WHERE users.id = ? 
    ORDER BY images.created_at DESC
");
$stmt->execute([$_SESSION['user_id']]);
$images = $stmt->fetchAll(PDO::FETCH_ASSOC);

// Récupération du message de succès
$successMessage = $_SESSION['success_message'] ?? null;
unset($_SESSION['success_message']);
?>

<?php include 'templates/header.php'; ?>
<div class="page-wrapper">
    <?php include 'templates/sidebar.php'; ?>

    <?php if ($successMessage): ?>
    <div class="toast success-toast" id="success-toast">
        <?= htmlspecialchars($successMessage) ?>
    </div>
    <?php endif; ?>
    
    <main class="gallery-content">
        <?php if (empty($images)): ?>
            <p>Aucune image à afficher pour le moment.</p>
        <?php else: ?>
            <?php foreach ($images as $image): ?>
                <div class="image-card">
                    <div class="image-preview">
                        <img src="<?= htmlspecialchars($image['path']) ?>" alt="image">
                    </div>
                    <p class="image-caption"><?= htmlspecialchars($image['caption']) ?></p>
                    <p class="image-date">
                        Posté par <?= htmlspecialchars($image['login']) ?> le 
                        <?= date("d/m/Y à H:i", strtotime($image['created_at'])) ?>
                    </p>
                    <!-- ✅ Correction ici : passage de l'ID de l'image -->
                    <a href="view-larger.php?image_id=<?= $image['id'] ?>" class="btn-view">Voir en grand</a>
                </div>
            <?php endforeach; ?>
        <?php endif; ?>
    </main>
</div>

<script src="assets/js/sidebar-menu-handler.js"></script>
<script src="assets/js/toast-handler.js"></script>
<?php include 'templates/footer.php'; ?>

----- ./Makefile -----
RESET  := \033[0m
BOLD   := \033[1m
RED    := \033[31m
GREEN  := \033[32m
YELLOW := \033[33m
BLUE   := \033[34m
CYAN   := \033[36m

# === Génération snapshot ===
generate_code:
	@echo -e "$(CYAN)\n📄 Génération de 'code.txt'...$(RESET)"
	@$(call progress)
	@echo "===== PROJECT TREE =====" > code.txt
	@tree -I '.*' >> code.txt
	@$(call progress)
	@echo -e "\n===== FILE CONTENTS =====" >> code.txt
	@find . -type f \
		! -path "./.*" \
		! -path "*/.*" \
		! -path "*./doc/maquette/wireframes/*" \
		! -path "*./public/assets/img/*" \
		! -path "*./public/uploads/*" \
		! -name "code.txt" | while read -r file; do \
		echo "----- $$file -----" >> code.txt; \
		cat "$$file" >> code.txt; \
		echo "" >> code.txt; \
	done
	@$(call progress)
	@echo -e "$(GREEN)📚 'code.txt' généré avec succès.$(RESET)"
	@echo -e "$(YELLOW)------------------------------------------------------$(RESET)"

clean:
	@echo -e "$(RED)\n🧹 Nettoyage du projet...$(RESET)"
	@$(call progress)
	@rm -rf $(BUILD) $(BIN) code.txt
	@$(call progress)
	@echo -e "$(YELLOW)🧼 Fichiers supprimés avec succès.$(RESET)"
	@echo -e "$(YELLOW)------------------------------------------------------$(RESET)"
----- ./install.sh -----
#!/bin/bash

# ===========================
# 🛠 INSTALLATION SCRIPT
# Projet Banque d’Images
# Remarques : - Donnez les droits d’exécution "chmod +x install.sh"
#             - Exécutez en tant que root "sudo ./install.sh"
# ===========================

set -e  # Stoppe si une commande échoue

# ANSI background + foreground combos
RED_BG_WHITE='\033[41;97m'
GREEN_BG_BLACK='\033[42;30m'
YELLOW_BG_BLACK='\033[43;30m'
BLUE_BG_WHITE='\033[44;97m'
NC='\033[0m'  # Reset

echo -e "${BLUE_BG_WHITE} Setup du projet Banque d’Images... ${NC}"
sleep 1

# Vérifie si l'utilisateur est root
if [ "$EUID" -ne 0 ]; then
  echo -e "${RED_BG_WHITE} ❌ Ce script doit être exécuté en tant que root (utilisez sudo) ${NC}"
  exit 1
fi

# Liste des paquets nécessaires
PAQUETS=(php php-mysql mysql-server apache2)
A_INSTALLER=()

echo -e "${YELLOW_BG_BLACK} Vérification des paquets requis... ${NC}"
sleep 1
for pkg in "${PAQUETS[@]}"; do
  if dpkg -l | grep -qw "$pkg"; then
    echo -e "${GREEN_BG_BLACK}  $pkg déjà installé. ${NC}"
  else
    echo -e "${YELLOW_BG_BLACK}  $pkg non trouvé, il sera installé. ${NC}"
    A_INSTALLER+=("$pkg")
  fi
done

if [ ${#A_INSTALLER[@]} -gt 0 ]; then
  echo -e "${YELLOW_BG_BLACK} Mise à jour des paquets... ${NC}"
  apt update
  echo -e "${YELLOW_BG_BLACK} Installation des paquets manquants : ${A_INSTALLER[*]} ${NC}"
  apt install -y "${A_INSTALLER[@]}"
  echo -e "${GREEN_BG_BLACK} ✅ Paquets manquants installés avec succès. ${NC}"
else
  echo -e "${GREEN_BG_BLACK} Tous les paquets nécessaires sont déjà installés. ${NC}"
fi

sleep 1

echo -e "${YELLOW_BG_BLACK} Démarrage de MySQL... ${NC}"
systemctl enable mysql
systemctl start mysql
sleep 1

echo -e "${YELLOW_BG_BLACK}  Création de la base de données et de l'utilisateur... ${NC}"
sleep 1

mysql -u root <<EOF
DROP DATABASE IF EXISTS l2info;
CREATE DATABASE l2info CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
DROP USER IF EXISTS 'l2info'@'localhost';
CREATE USER 'l2info'@'localhost' IDENTIFIED BY 'l2info';
GRANT ALL PRIVILEGES ON l2info.* TO 'l2info'@'localhost';
FLUSH PRIVILEGES;
EOF

sleep 1

# Import du script SQL
if [ -f "init.sql" ]; then
  echo -e "${YELLOW_BG_BLACK}  Import de init.sql... ${NC}"
  sleep 1
  mysql -u l2info -pl2info l2info < init.sql
  echo -e "${GREEN_BG_BLACK} ✅ Base de données initialisée avec succès. ${NC}"
else
  echo -e "${RED_BG_WHITE} ❌ Fichier init.sql introuvable dans le répertoire actuel. ${NC}"
  exit 1
fi

sleep 1
echo -e "${GREEN_BG_BLACK}  Installation terminée avec succès ! ${NC}"
echo -e "${BLUE_BG_WHITE}  Accédez à l'application : http://localhost/Banque-D-Images/public ${NC}"

----- ./README.md -----
# Banque-D-Images
----- ./init.sql -----
-- Assurez-vous d'être connecté à la base de données 'l2info' avec l'utilisateur 'l2info'

-- Supprime la table si elle existe
DROP TABLE IF EXISTS users;

-- Création de la table 'users'
CREATE TABLE users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    login VARCHAR(50) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    nom VARCHAR(100),
    prenom VARCHAR(100),
    email VARCHAR(100),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Supprimer la table si elle existe
DROP TABLE IF EXISTS images;

-- Créer la table d'images
CREATE TABLE images (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    path VARCHAR(255) NOT NULL,
    caption TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

-- Supprimer la table si elle existe
DROP TABLE IF EXISTS images;

-- Créer la table d'images
CREATE TABLE images (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    path VARCHAR(255) NOT NULL,
    caption TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);


-- Supprimer la table si elle existe 
DROP TABLE IF EXISTS comments;

CREATE TABLE comments(
    id INT AUTO_INCREMENT PRIMARY KEY,
    image_id INT NOT NULL,
    author VARCHAR(100) NOT NULL DEFAULT 'Anonyme',
    comment_text TEXT NOT NULL,
    created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    INDEX (image_id)
);


-- Ajouter un utilisateur de test
INSERT INTO users (login, password, nom, prenom, email)
VALUES (
  'ahmed2004',
  '$2y$10$lsmIHX.7qsxPfn.7gYmf5eY4PaBBazK4JiAx9uy0sndIwQTPuDz0G',
  'CHOULAK',
  'Ahmed',
  'ahmedchoulak2004@gmail.com'
);

-- Ajouter des images test
INSERT INTO images (user_id, path, caption)
VALUES 
(1, 'uploads/chat1.jpg', 'Chat mignon'),
(1, 'uploads/chat2.jpg', 'Chat curieux');


INSERT INTO comments (image_id, author, comment_text, created_at) VALUES
(1, 'Bastien', 'Magnifique !', '2025-05-13 22:20:00'),
(1, 'Vous', 'Merci !', '2025-05-13 22:22:00'),
(2, 'Alice', 'Superbe photo !', '2025-05-14 10:15:30'),
(1, 'Jean', "J'adore cette image.", '2025-05-14 12:00:00');
----- ./src/database.php -----
<?php
function getDatabaseConnection() {
    $host = 'localhost';
    $db = 'l2info';
    $user = 'l2info';
    $pass = 'l2info';
    $charset = 'utf8mb4';

    $dsn = "mysql:host=$host;dbname=$db;charset=$charset";
    $options = [
        PDO::ATTR_ERRMODE            => PDO::ERRMODE_EXCEPTION,
        PDO::ATTR_DEFAULT_FETCH_MODE => PDO::FETCH_ASSOC,
        PDO::ATTR_EMULATE_PREPARES   => false,
    ];

    try {
        return new PDO($dsn, $user, $pass, $options);
    } catch (PDOException $e) {
        die("Erreur de connexion à la base : " . $e->getMessage());
    }
}

----- ./src/contact.php -----
<?php
ini_set('display_errors', 1);
ini_set('display_startup_errors', 1);
error_reporting(E_ALL);

if (session_status() === PHP_SESSION_NONE) {
    session_start();
}

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $nom = trim($_POST['nom'] ?? '');
    $email = trim($_POST['email'] ?? '');
    $message = trim($_POST['message'] ?? '');

    // Validation
    if (empty($nom) || empty($email) || empty($message)) {
        $_SESSION['contact_error'] = "Tous les champs sont obligatoires.";
        header("Location: ../public/contact.php");
        exit;
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $_SESSION['contact_error'] = "Adresse email invalide.";
        header("Location: ../public/contact.php");
        exit;
    }

    $to = "ahmechoulak2004@gmail.com";
    $subject = "Nouveau message de contact";
    $headers = "From: " . $email;
    $body = "Nom : $nom\nEmail : $email\nMessage :\n$message";

    // dans un cas normal mais nous on fera juste un log en local
    // mail($to, $subject, $body, $headers);

    // Écriture dans le fichier contact.log
    $logEntry = "=== Nouveau message de contact ===\n";
    $logEntry .= "Date : " . date('Y-m-d H:i:s') . "\n";
    $logEntry .= "Nom : $nom\n";
    $logEntry .= "Email : $email\n";
    $logEntry .= "Message :\n$message\n";
    $logEntry .= "===============================\n\n";

    file_put_contents(__DIR__ . "/../log/contact.log", $logEntry, FILE_APPEND);

    $_SESSION['contact_success'] = "Votre message a bien été envoyé. Merci !";
    header("Location: ../public/contact.php");
    exit;
}
?>

----- ./src/auth.php -----
<?php
if (session_status() === PHP_SESSION_NONE) {
    session_start();
}

function registerUser(PDO $pdo, $login, $password, $nom, $prenom, $email, $confirm) {
    if (empty($login) || empty($password) || empty($nom) || empty($prenom) || empty($email)) {
        return "Veuillez remplir tous les champs obligatoires.";
    }

    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        return "Adresse email invalide.";
    }

    if (strlen($login) < 4) {
        return "Le login doit contenir au moins 4 caractères.";
    }
    if (strlen($password) < 6) {
        return "Le mot de passe doit contenir au moins 6 caractères.";
    }

    if ($password !== $confirm) {
        return "Les mots de passe ne correspondent pas.";
    }

    $stmt = $pdo->prepare("SELECT id FROM users WHERE login = ?");
    $stmt->execute([$login]);
    if ($stmt->fetch()) {
        return "Ce login est déjà utilisé.";
    }

    $stmt = $pdo->prepare("SELECT id FROM users WHERE email = ?");
    $stmt->execute([$email]);
    if ($stmt->fetch()) {
        return "Cet email est déjà utilisé.";
    }

    $hashed = password_hash($password, PASSWORD_DEFAULT);
    $stmt = $pdo->prepare("INSERT INTO users (login, password, nom, prenom, email) VALUES (?, ?, ?, ?, ?)");
    $stmt->execute([$login, $hashed, $nom, $prenom, $email]);

    $_SESSION['user_id'] = $pdo->lastInsertId();
    return true;
}

function loginUser(PDO $pdo, $login, $password) {
    if (empty($login) || empty($password)) {
        return "Veuillez renseigner le login et le mot de passe.";
    }

    $stmt = $pdo->prepare("SELECT * FROM users WHERE login = ?");
    $stmt->execute([$login]);
    $user = $stmt->fetch();

    if (!$user) {
        return "Aucun compte trouvé avec ce login.";
    }

    if (!password_verify($password, $user['password'])) {
        return "Mot de passe incorrect.";
    }

    $_SESSION['user_id'] = $user['id'];
    return true;
}

function isLoggedIn() {
    return isset($_SESSION['user_id']);
}

